package chatapp;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketAddress;
import java.util.Scanner;

public class CallListener extends Caller {
	final static int PORT = 28411;
	final static String ChatApp = "ChatApp";
	final static String CODE = "UTF-8";

	private String localNick;
	private InetSocketAddress localAddress;
	private boolean isBusy;
	private String remoteNick;

	public CallListener() {
		this("Untitled");
	}

	public CallListener(String localNick) {
		this.localNick = localNick;
	}

	public CallListener(String localNick, String localIP) {
		this(localNick);
		this.localAddress = new InetSocketAddress(localIP, PORT);
	}

	private String receiveRemoteNick(Connection connection) throws IOException {
		Command c = connection.receive();
		return c.toString().substring((ChatApp + " user ").length());
	}

	public Connection getConnection() throws IOException {
		@SuppressWarnings("resource")
		ServerSocket serverSocket = new ServerSocket(PORT);
		Socket socket = serverSocket.accept();
		Connection connection = new Connection(socket);

		if (isBusy) {
			connection.sendNickBusy(localNick);
			remoteNick = receiveRemoteNick(connection);
			return null;
		} else {
			isBusy = true;
			connection.sendNickHello(localNick);
			remoteNick = receiveRemoteNick(connection);
			@SuppressWarnings("resource")
			Scanner in = new Scanner(System.in);
			in.next();
			return connection;
		}
	}

	public String getLocalNick() {
		return localNick;
	}

	public boolean isBusy() {
		return isBusy;
	}

	public void setBusy(boolean isBusy) {
		this.isBusy = isBusy;
	}

	public SocketAddress getListenAddress() {
		return localAddress;
	}

	public void setLocalNick(String localNick) {
		this.localNick = localNick;
	}

	public void setListenAddress(InetSocketAddress listenAddress) {
		localAddress = listenAddress;
	}

	public String toString() {
		return localNick + " " + localAddress.getHostString(); // Don`t sure
	}

	public String getRemoteNick() {
		return remoteNick;
	}

	public static void main(String[] args) throws IOException {
		// Maybe this main for testing?
		CallListener c = new CallListener("Lammer");
		c.getConnection();
		System.out.println(c.getRemoteNick());
	}
}

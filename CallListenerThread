package chatapp;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.SocketAddress;
import java.util.Observable;

public class CallListenerThread extends Observable implements Runnable {
	private CallListener call;
	private volatile boolean isClose;
	private Caller.CallStatus callStatus;
	private Thread t;

	public CallListenerThread() {
		t = new Thread(this);
		isClose = false;
		t.start();
	}

	public CallListenerThread(CallListener call) {
		this.call = call;
		t = new Thread(this);
		isClose = false;
		t.start();
	}

	public SocketAddress getListenAddress() throws IOException {
		return call.getListenAddress();
	}

	public String getLocalNick() {
		return call.getLocalNick();
	}

	public SocketAddress getRemoteAddress() {
		return call.getRemoteAddress();
	}

	public boolean isBusy() {
		return call.isBusy();
	}

	public void setBusy(boolean isBusy) {
		call.setBusy(isBusy);
	}

	public void setListenAddress(InetSocketAddress newAddress) {
		call.setListenAddress(newAddress);
	}

	public void setLocalNick(String newNick) {
		call.setLocalNick(newNick);
	}

	public void run() {
		while (!isClose) {
			try {
				Connection c = call.getConnection();
				if (c == null)
					setCallStatus(Caller.CallStatus.BUSY);
				else
					setCallStatus(Caller.CallStatus.OK);

			} catch (IOException e) {
				setCallStatus(Caller.CallStatus.REJECTED);
			}

			setChanged();
			notifyObservers();

		}
	}

	public void stop() {
		isClose = true;
	}

	public Caller.CallStatus getCallStatus() {
		return callStatus;
	}

	public void setCallStatus(Caller.CallStatus callStatus) {
		this.callStatus = callStatus;
	}
}
